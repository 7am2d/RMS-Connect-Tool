<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zmb+HwfJTZG3fD2JAAAAAElFTkSuQmCC
</value>
  </data>
</root>